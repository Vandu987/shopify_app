{% comment %}
  Template Name: Collection - Advanced Filter
  Description: Collection page with availability filter, multiple sort options, and view toggle
{% endcomment %}

<div class="collection-container">
  <!-- Left Sidebar - Filters -->
  <div class="collection-sidebar">
    <div class="filter-group">
      <h3>Availability</h3>
      <label class="filter-checkbox">
        <input type="checkbox" name="availability" value="in-stock" {% unless current_tags contains 'out-of-stock' %}checked{% endunless %}>
        In Stock Only
      </label>
    </div>
  </div>

  <!-- Main Content Area -->
  <div class="collection-main">
    <!-- Toolbar with Sort and View Options -->
    <div class="collection-toolbar">
      <div class="sort-by">
        <label for="sort-by">Sort by:</label>
        <select id="sort-by">
          <option value="manual" {% if collection.sort_by == 'manual' %}selected{% endif %}>Featured</option>
          <option value="best-selling" {% if collection.sort_by == 'best-selling' %}selected{% endif %}>Best Selling</option>
          <option value="title-ascending" {% if collection.sort_by == 'title-ascending' %}selected{% endif %}>A-Z</option>
          <option value="title-descending" {% if collection.sort_by == 'title-descending' %}selected{% endif %}>Z-A</option>
          <option value="price-ascending" {% if collection.sort_by == 'price-ascending' %}selected{% endif %}>Price: Low to High</option>
          <option value="price-descending" {% if collection.sort_by == 'price-descending' %}selected{% endif %}>Price: High to Low</option>
          <option value="created-ascending" {% if collection.sort_by == 'created-ascending' %}selected{% endif %}>Oldest</option>
          <option value="created-descending" {% if collection.sort_by == 'created-descending' %}selected{% endif %}>Newest</option>
        </select>
      </div>

      <div class="view-options">
        <button class="view-btn grid-view active" data-view="grid">
          <svg viewBox="0 0 24 24"><rect x="3" y="3" width="7" height="7"/><rect x="14" y="3" width="7" height="7"/><rect x="14" y="14" width="7" height="7"/><rect x="3" y="14" width="7" height="7"/></svg>
        </button>
        <button class="view-btn list-view" data-view="list">
          <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" version="1.1" id="Layer_1" viewBox="0 0 504 504" xml:space="preserve">
            <g>
              <g>
                <path d="M0,86.784v144.56h167.968V86.784H0z M151.968,215.344H16v-112.56h135.968V215.344z"></path>
              </g>
            </g>
            <g>
              <g>
                <path d="M0,272.656v144.56h167.968v-144.56H0z M151.968,401.216H16v-112.56h135.968V401.216z"></path>
              </g>
            </g>
            <g>
              <g>
                <rect x="252" y="119.856" width="188.96" height="16"></rect>
              </g>
            </g>
            <g>
              <g>
                <rect x="251.952" y="182.288" width="252.048" height="16"></rect>
              </g>
            </g>
            <g>
              <g>
                <rect x="252" y="305.712" width="188.96" height="16"></rect>
              </g>
            </g>
            <g>
              <g>
                <rect x="251.952" y="368.144" width="252.048" height="16"></rect>
              </g>
            </g>
          </svg>
        </button>
      </div>
    </div>

    <!-- Products Display -->
    <div class="products-display">
      {% paginate collection.products by 12 %}
        <div id="products-grid-view" class="products-grid-view" style="display: block;">
          {% for product in collection.products %}
            <div class="product-item {% unless product.available %}sold-out{% endunless %}">
              <a href="{{ product.url }}">
                <div class="product-image">
                  <img src="{{ product.featured_image | img_url: '400x400', crop: 'center' }}" alt="{{ product.title | escape }}">
                  {% unless product.available %}<span class="product-availability">Sold Out</span>{% endunless %}
                </div>
                <div class="product-info">
                  <h3 class="product-title">{{ product.title }}</h3>
                  <div class="product-rating">
                    {% render 'product-rating', product: product %}
                  </div>
                  <p class="product-price">{{ product.price | money }}</p>
                </div>
              </a>
            </div>
          {% endfor %}
        </div>

        <div id="products-list-view" class="products-list-view" style="display: none;">
          {% for product in collection.products %}
            <div class="product-item {% unless product.available %}sold-out{% endunless %}">
              <a href="{{ product.url }}" style="display: flex; width: 100%;">
                <div class="product-image">
                  <img src="{{ product.featured_image | img_url: '300x300', crop: 'center' }}" alt="{{ product.title | escape }}">
                  {% unless product.available %}<span class="product-availability">Sold Out</span>{% endunless %}
                </div>
                <div class="product-info">
                  <h3 class="product-title">{{ product.title }}</h3>
                  <div class="product-rating">
                    {% render 'product-rating', product: product %}
                  </div>
                  <p class="product-price">{{ product.price | money }}</p>
                  <p class="product-description">{{ product.description | strip_html | truncatewords: 30 }}</p>
                </div>
              </a>
            </div>
          {% endfor %}
        </div>

        {% if paginate.pages > 1 %}
          <div class="pagination">
            {{ paginate | default_pagination }}
          </div>
        {% endif %}
      {% endpaginate %}
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Set initial view from localStorage or default to grid
  const savedView = localStorage.getItem('productView') || 'grid';
  setView(savedView);

  // View toggle buttons
  document.querySelectorAll('.view-btn').forEach(button => {
    button.addEventListener('click', function() {
      const view = this.dataset.view;
      setView(view);
      localStorage.setItem('productView', view);
    });
  });

  function setView(view) {
    // Update active button
    document.querySelectorAll('.view-btn').forEach(btn => {
      btn.classList.toggle('active', btn.dataset.view === view);
    });

    // Show/hide views
    document.getElementById('products-grid-view').style.display = view === 'grid' ? 'grid' : 'none';
    document.getElementById('products-list-view').style.display = view === 'list' ? 'flex' : 'none';
  }

  // Sorting functionality
  document.getElementById('sort-by').addEventListener('change', function(e) {
    const value = e.target.value;
    const url = new URL(window.location.href);
    url.searchParams.set('sort_by', value);
    window.location.href = url.toString();
  });

  // Availability filter
  document.querySelector('input[name="availability"]').addEventListener('change', function(e) {
    const url = new URL(window.location.href);
    
    if (this.checked) {
      // Remove out-of-stock tag if it exists
      url.searchParams.delete('constraint');
    } else {
      // Show all products (including out of stock)
      url.searchParams.set('constraint', 'available');
    }
    
    window.location.href = url.toString();
  });
});
</script>