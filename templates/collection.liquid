{% comment %}
  Template Name: Collection - Advanced Filter with Dynamic Ratings
  Description: Enhanced collection page with availability filter, sorting, view toggle, and dynamic ratings
{% endcomment %}

<div class="collection-container">
  <!-- Left Sidebar - Filters -->
  <div class="collection-sidebar">
    <div class="filter-group">
      <h3>Availability</h3>
      <label class="filter-checkbox">
        <input type="checkbox" name="availability" value="in-stock" {% unless current_tags contains 'out-of-stock' %}checked{% endunless %}>
        In Stock Only
      </label>
    </div>

    <!-- Add more filter groups as needed -->
    <div class="filter-group">
      <h3>Price Range</h3>
      <div class="price-range-slider">
        <input type="range" min="0" max="1000" value="1000" class="slider" id="priceRange">
        <div class="price-values">
          <span id="minPrice">$0</span>
          <span id="maxPrice">$1000+</span>
        </div>
      </div>
    </div>
  </div>

  <!-- Main Content Area -->
  <div class="collection-main">
    <!-- Toolbar with Sort and View Options -->
    <div class="collection-toolbar">
      <div class="sort-by">
        <label for="sort-by">Sort by:</label>
        <select id="sort-by">
          <option value="manual" {% if collection.sort_by == 'manual' %}selected{% endif %}>Featured</option>
          <option value="best-selling" {% if collection.sort_by == 'best-selling' %}selected{% endif %}>Best Selling</option>
          <option value="title-ascending" {% if collection.sort_by == 'title-ascending' %}selected{% endif %}>A-Z</option>
          <option value="title-descending" {% if collection.sort_by == 'title-descending' %}selected{% endif %}>Z-A</option>
          <option value="price-ascending" {% if collection.sort_by == 'price-ascending' %}selected{% endif %}>Price: Low to High</option>
          <option value="price-descending" {% if collection.sort_by == 'price-descending' %}selected{% endif %}>Price: High to Low</option>
          <option value="created-ascending" {% if collection.sort_by == 'created-ascending' %}selected{% endif %}>Oldest</option>
          <option value="created-descending" {% if collection.sort_by == 'created-descending' %}selected{% endif %}>Newest</option>
        </select>
      </div>

      <div class="view-options">
        <button class="view-btn grid-view active" data-view="grid" aria-label="Grid view">
          <svg viewBox="0 0 24 24"><rect x="3" y="3" width="7" height="7"/><rect x="14" y="3" width="7" height="7"/><rect x="14" y="14" width="7" height="7"/><rect x="3" y="14" width="7" height="7"/></svg>
        </button>
        <button class="view-btn list-view" data-view="list" aria-label="List view">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z"/></svg>
        </button>
      </div>
    </div>

    <!-- Products Display -->
    <div class="products-display">
      {% paginate collection.products by 12 %}
        <div id="products-grid-view" class="products-grid-view">
          {% for product in collection.products %}
            <div class="product-item {% unless product.available %}sold-out{% endunless %}">
              <a href="{{ product.url }}" class="product-link">
                <div class="product-image">
                  <img src="{{ product.featured_image | img_url: '400x' }}" alt="{{ product.title | escape }}" loading="lazy">
                  {% unless product.available %}<span class="product-availability">Sold Out</span>{% endunless %}
                </div>
                <div class="product-info">
                  {% render 'dynamic-product-rating', product: product %}
                  <h3 class="product-title">{{ product.title }}</h3>
                  <p class="product-price">{{ product.price | money }}</p>
                  {% if product.compare_at_price > product.price %}
                    <p class="product-compare-price">{{ product.compare_at_price | money }}</p>
                  {% endif %}
                </div>
              </a>
            </div>
          {% endfor %}
        </div>

        <div id="products-list-view" class="products-list-view" style="display:none;">
          {% for product in collection.products %}
            <div class="product-item {% unless product.available %}sold-out{% endunless %}">
              <a href="{{ product.url }}" class="product-link" style="display:flex;width:100%;">
                <div class="product-image">
                  <img src="{{ product.featured_image | img_url: '300x' }}" alt="{{ product.title | escape }}" loading="lazy">
                  {% unless product.available %}<span class="product-availability">Sold Out</span>{% endunless %}
                </div>
                <div class="product-info">
                  {% render 'dynamic-product-rating', product: product %}
                  <h3 class="product-title">{{ product.title }}</h3>
                  <p class="product-price">
                    {{ product.price | money }}
                    {% if product.compare_at_price > product.price %}
                      <span class="product-compare-price">{{ product.compare_at_price | money }}</span>
                    {% endif %}
                  </p>
                  <p class="product-description">{{ product.description | strip_html | truncatewords: 30 }}</p>
                  <button class="quick-view-btn" data-product-handle="{{ product.handle }}">Quick View</button>
                </div>
              </a>
            </div>
          {% endfor %}
        </div>

        {% if paginate.pages > 1 %}
          <div class="pagination">
            {{ paginate | default_pagination }}
          </div>
        {% endif %}
      {% endpaginate %}
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Set initial view from localStorage or default to grid
  const savedView = localStorage.getItem('productView') || 'grid';
  setView(savedView);

  // View toggle buttons
  document.querySelectorAll('.view-btn').forEach(button => {
    button.addEventListener('click', function() {
      const view = this.dataset.view;
      setView(view);
      localStorage.setItem('productView', view);
    });
  });

  function setView(view) {
    // Update active button
    document.querySelectorAll('.view-btn').forEach(btn => {
      btn.classList.toggle('active', btn.dataset.view === view);
    });

    // Show/hide views
    document.getElementById('products-grid-view').style.display = view === 'grid' ? 'grid' : 'none';
    document.getElementById('products-list-view').style.display = view === 'list' ? 'flex' : 'none';
  }

  // Sorting functionality
  document.getElementById('sort-by').addEventListener('change', function(e) {
    const value = e.target.value;
    const url = new URL(window.location.href);
    url.searchParams.set('sort_by', value);
    window.location.href = url.toString();
  });

  // Availability filter
  document.querySelector('input[name="availability"]').addEventListener('change', function(e) {
    const url = new URL(window.location.href);
    
    if (this.checked) {
      url.searchParams.set('availability', 'in-stock');
    } else {
      url.searchParams.delete('availability');
    }
    
    window.location.href = url.toString();
  });

  // Price range filter (example implementation)
  const priceRangeSlider = document.getElementById('priceRange');
  if (priceRangeSlider) {
    priceRangeSlider.addEventListener('input', function() {
      // This would need to be connected to your actual filtering mechanism
      const maxPrice = this.value;
      document.getElementById('maxPrice').textContent = maxPrice < 1000 ? `$${maxPrice}` : '$1000+';
    });
  }

  // Quick view functionality
  document.querySelectorAll('.quick-view-btn').forEach(button => {
    button.addEventListener('click', function(e) {
      e.preventDefault();
      const productHandle = this.dataset.productHandle;
      // Implement your quick view functionality here
      console.log('Quick view for:', productHandle);
    });
  });
});
</script>